<?php

namespace Proxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class UserRegister extends \Entities\UserRegister implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'registerId', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'uniqueId', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'userHash', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'userName', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'emailId', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'password', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'firstname', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'lastname', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'regActive', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'regStatus', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'regNow', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'cstamp', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'ustamp');
        }

        return array('__isInitialized__', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'registerId', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'uniqueId', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'userHash', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'userName', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'emailId', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'password', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'firstname', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'lastname', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'regActive', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'regStatus', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'regNow', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'cstamp', '' . "\0" . 'Entities\\UserRegister' . "\0" . 'ustamp');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (UserRegister $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getRegisterId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getRegisterId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegisterId', array());

        return parent::getRegisterId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUniqueId($uniqueId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUniqueId', array($uniqueId));

        return parent::setUniqueId($uniqueId);
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueId', array());

        return parent::getUniqueId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserHash($userHash)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserHash', array($userHash));

        return parent::setUserHash($userHash);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserHash()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserHash', array());

        return parent::getUserHash();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserName($userName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserName', array($userName));

        return parent::setUserName($userName);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserName', array());

        return parent::getUserName();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailId($emailId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailId', array($emailId));

        return parent::setEmailId($emailId);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailId', array());

        return parent::getEmailId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstname($firstname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstname', array($firstname));

        return parent::setFirstname($firstname);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstname', array());

        return parent::getFirstname();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastname($lastname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastname', array($lastname));

        return parent::setLastname($lastname);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastname', array());

        return parent::getLastname();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegActive($regActive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegActive', array($regActive));

        return parent::setRegActive($regActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegActive', array());

        return parent::getRegActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegStatus($regStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegStatus', array($regStatus));

        return parent::setRegStatus($regStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegStatus', array());

        return parent::getRegStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegNow($regNow)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegNow', array($regNow));

        return parent::setRegNow($regNow);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegNow()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegNow', array());

        return parent::getRegNow();
    }

    /**
     * {@inheritDoc}
     */
    public function setCstamp($cstamp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCstamp', array($cstamp));

        return parent::setCstamp($cstamp);
    }

    /**
     * {@inheritDoc}
     */
    public function getCstamp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCstamp', array());

        return parent::getCstamp();
    }

    /**
     * {@inheritDoc}
     */
    public function setUstamp($ustamp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUstamp', array($ustamp));

        return parent::setUstamp($ustamp);
    }

    /**
     * {@inheritDoc}
     */
    public function getUstamp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUstamp', array());

        return parent::getUstamp();
    }

    /**
     * {@inheritDoc}
     */
    public function addUserData(\Entities\UserData $userData)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserData', array($userData));

        return parent::addUserData($userData);
    }

}
