<?php

namespace Proxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class AppUserRegister extends \Entities\AppUserRegister implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regId', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regUniqueId', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regRecordhash', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regUserName', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regEmailId', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regPassword', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regFirstname', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regLastname', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regActive', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regStatus', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regUnlogincount', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regNow', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regCstamp', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regUstamp');
        }

        return array('__isInitialized__', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regId', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regUniqueId', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regRecordhash', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regUserName', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regEmailId', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regPassword', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regFirstname', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regLastname', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regActive', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regStatus', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regUnlogincount', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regNow', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regCstamp', '' . "\0" . 'Entities\\AppUserRegister' . "\0" . 'regUstamp');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (AppUserRegister $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getRegId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getRegId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegId', array());

        return parent::getRegId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegUniqueId($regUniqueId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegUniqueId', array($regUniqueId));

        return parent::setRegUniqueId($regUniqueId);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegUniqueId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegUniqueId', array());

        return parent::getRegUniqueId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegRecordhash($regRecordhash)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegRecordhash', array($regRecordhash));

        return parent::setRegRecordhash($regRecordhash);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegRecordhash()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegRecordhash', array());

        return parent::getRegRecordhash();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegUserName($regUserName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegUserName', array($regUserName));

        return parent::setRegUserName($regUserName);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegUserName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegUserName', array());

        return parent::getRegUserName();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegEmailId($regEmailId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegEmailId', array($regEmailId));

        return parent::setRegEmailId($regEmailId);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegEmailId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegEmailId', array());

        return parent::getRegEmailId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegPassword($regPassword)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegPassword', array($regPassword));

        return parent::setRegPassword($regPassword);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegPassword', array());

        return parent::getRegPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegFirstname($regFirstname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegFirstname', array($regFirstname));

        return parent::setRegFirstname($regFirstname);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegFirstname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegFirstname', array());

        return parent::getRegFirstname();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegLastname($regLastname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegLastname', array($regLastname));

        return parent::setRegLastname($regLastname);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegLastname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegLastname', array());

        return parent::getRegLastname();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegActive($regActive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegActive', array($regActive));

        return parent::setRegActive($regActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegActive', array());

        return parent::getRegActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegStatus($regStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegStatus', array($regStatus));

        return parent::setRegStatus($regStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegStatus', array());

        return parent::getRegStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegUnlogincount($regUnlogincount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegUnlogincount', array($regUnlogincount));

        return parent::setRegUnlogincount($regUnlogincount);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegUnlogincount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegUnlogincount', array());

        return parent::getRegUnlogincount();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegNow($regNow)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegNow', array($regNow));

        return parent::setRegNow($regNow);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegNow()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegNow', array());

        return parent::getRegNow();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegCstamp($regCstamp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegCstamp', array($regCstamp));

        return parent::setRegCstamp($regCstamp);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegCstamp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegCstamp', array());

        return parent::getRegCstamp();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegUstamp($regUstamp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegUstamp', array($regUstamp));

        return parent::setRegUstamp($regUstamp);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegUstamp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegUstamp', array());

        return parent::getRegUstamp();
    }

    /**
     * {@inheritDoc}
     */
    public function addUserData(\Entities\AppUserData $userData)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserData', array($userData));

        return parent::addUserData($userData);
    }

}
